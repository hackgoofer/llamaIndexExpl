[{'Installation and Setup': 'getting_started/installation', 'How to read these docs': 'getting_started/reading', 'Starter Tutorial': 'getting_started/starter_example', 'High-Level Concepts': 'getting_started/concepts', 'Customization Tutorial': 'getting_started/customization', 'Discover LlamaIndex Video Series': 'getting_started/discover_llamaindex'}, {'Q&A': 'use_cases/q_and_a/root', 'RAG CLI': 'use_cases/q_and_a/rag_cli', 'Chatbots': 'use_cases/chatbots', 'Agents': 'module_guides/deploying/agents/root', 'Agents (Putting your RAG Pipeline Together)': 'understanding/putting_it_all_together/agents', 'Build your own OpenAI Agent': 'examples/agent/openai_agent', 'OpenAI Agent with Query Engine Tools': 'examples/agent/openai_agent_with_query_engine', 'OpenAI Agent Query Planning': 'examples/agent/openai_agent_query_plan', 'OpenAI Assistant Agent': 'examples/agent/openai_assistant_agent', 'OpenAI Assistant Advanced Retrieval Cookbook': 'examples/agent/openai_assistant_query_cookbook', 'OpenAI agent: specifying a forced function call': 'examples/agent/openai_forced_function_call', 'Single-Turn Multi-Function Calling OpenAI Agents': 'examples/agent/openai_agent_parallel_function_calling', 'Context-Augmented OpenAI Agent': 'examples/agent/openai_agent_context_retrieval', 'Agentic Strategies (Optimizing your RAG Pipeline)': 'optimizing/agentic_strategies/agentic_strategies', 'Routers': 'module_guides/querying/router/root', 'Router Query Engine': 'examples/query_engine/RouterQueryEngine', 'Retriever Router Query Engine': 'examples/query_engine/RetrieverRouterQueryEngine', 'SQL Router Query Engine': 'examples/query_engine/SQLRouterQueryEngine', 'Router Retriever': 'examples/retrievers/router_retriever', 'Query Transformations': 'optimizing/advanced_retrieval/query_transformations', 'HyDE Query Transform': 'examples/query_transformations/HyDEQueryTransformDemo', 'Multi-Step Query Engine': 'examples/query_transformations/SimpleIndexDemo-multistep', 'Sub Question Query Engine (Intro)': 'examples/query_engine/sub_question_query_engine', 'Retrieval-Augmented OpenAI Agent': 'examples/agent/openai_agent_retrieval', 'OpenAI Agent + Query Engine Experimental Cookbook': 'examples/agent/openai_agent_query_cookbook', 'Usage Pattern': 'module_guides/deploying/agents/tools/usage_pattern', 'Module Guides': 'module_guides/deploying/agents/modules', 'Recursive Retriever + Document Agents': 'examples/query_engine/recursive_retriever_agents', 'Multi-Document Agents': 'examples/agent/multi_document_agents', 'GPT Builder Demo': 'examples/agent/agent_builder', 'Benchmarking OpenAI Retrieval API (through Assistant Agent)': 'examples/agent/openai_retrieval_benchmark', 'ReAct Agent - A Simple Intro with Calculator Tools': 'examples/agent/react_agent', 'ReAct Agent with Query Engine (RAG) Tools': 'examples/agent/react_agent_with_query_engine', 'Building a Custom Agent': 'examples/agent/custom_agent', 'Building an Agent around a Query Pipeline': 'examples/agent/agent_runner/query_pipeline_agent', 'Step-wise, Controllable Agents': 'examples/agent/agent_runner/agent_runner', 'Controllable Agents for RAG': 'examples/agent/agent_runner/agent_runner_rag_controllable', 'Tools': 'module_guides/deploying/agents/tools/root', 'LlamaHub Tools Guide': 'module_guides/deploying/agents/tools/llamahub_tools_guide', 'Lower-Level Agent API': 'module_guides/deploying/agents/agent_runner', 'Structured Data Extraction': 'use_cases/extraction', 'Structured Outputs': 'module_guides/querying/structured_outputs/structured_outputs', 'Pydantic Program': 'module_guides/querying/structured_outputs/pydantic_program', 'LLM Pydantic Program': 'examples/output_parsing/llm_program', 'OpenAI Pydantic Program': 'examples/output_parsing/openai_pydantic_program', 'Guidance Pydantic Program': 'examples/output_parsing/guidance_pydantic_program', 'Guidance for Sub-Question Query Engine': 'examples/output_parsing/guidance_sub_question', 'DataFrame Structured Data Extraction': 'examples/output_parsing/df_program', 'Evaporate Demo': 'examples/output_parsing/evaporate_program', 'Query Engines + Pydantic Outputs': 'module_guides/querying/structured_outputs/query_engine', 'Query Engine with Pydantic Outputs': 'examples/query_engine/pydantic_query_engine', 'Pydantic Tree Summarize': 'examples/response_synthesizers/pydantic_tree_summarize', 'Output Parsing Modules': 'module_guides/querying/structured_outputs/output_parser', 'Guardrails Output Parsing': 'examples/output_parsing/GuardrailsDemo', 'Langchain Output Parsing': 'examples/output_parsing/LangchainOutputParserDemo', 'Extracting names and locations from descriptions of people': 'examples/output_parsing/df_program', 'Extracting album data from music reviews': 'examples/llm/llama_api', 'Extracting information from emails': 'examples/usecases/email_data_extraction', 'Multi-modal': 'use_cases/multimodal', 'Advanced Multi-Modal Retrieval using GPT4V and Multi-Modal Index/Retriever': 'examples/multi_modal/gpt4v_multi_modal_retrieval', 'Multi-modal retrieval with CLIP': 'examples/multi_modal/multi_modal_retrieval', 'Image to Image Retrieval': 'examples/multi_modal/image_to_image_retrieval', 'Semi-structured Image Retrieval': 'examples/multi_modal/structured_image_retrieval', 'Chroma Multi-Modal Demo with LlamaIndex': 'examples/multi_modal/ChromaMultiModalDemo', 'Multi-Modal on PDF’s with tables.': 'examples/multi_modal/multi_modal_pdf_tables', 'Multi-Modal LLM using Google’s Gemini model for image understanding and build Retrieval Augmented Generation with LlamaIndex': 'examples/multi_modal/gemini', 'Multi-Modal GPT4V Pydantic Program': 'examples/multi_modal/multi_modal_pydantic', 'Retrieval-Augmented Image Captioning': 'examples/multi_modal/llava_multi_modal_tesla_10q', '[Beta] Multi-modal ReAct Agent': 'examples/multi_modal/mm_agent', 'GPT4-V Experiments with General, Specific questions and Chain Of Thought (COT) Prompting Technique.': 'examples/multi_modal/gpt4v_experiments_cot', 'Multi-Modal LLM using Replicate LlaVa, Fuyu 8B, MiniGPT4 models for image reasoning': 'examples/multi_modal/replicate_multi_modal', 'GPT4-V:': 'examples/multi_modal/openai_multi_modal', 'Evaluating Multi-Modal RAG': 'examples/evaluation/multi_modal/multi_modal_rag_evaluation', 'Multi-Modal LLM using OpenAI GPT-4V model for image reasoning': 'examples/multi_modal/openai_multi_modal'}, {'Building an LLM application': 'understanding/understanding', 'Using LLMs': 'understanding/using_llms/using_llms', 'Privacy and Security': 'understanding/using_llms/privacy', 'Loading Data (Ingestion)': 'understanding/loading/loading', 'LlamaHub': 'understanding/loading/llamahub', 'Documents / Nodes': 'module_guides/loading/documents_and_nodes/root', 'Defining and Customizing Documents': 'module_guides/loading/documents_and_nodes/usage_documents', 'Metadata Extraction Usage Pattern': 'module_guides/loading/documents_and_nodes/usage_metadata_extractor', 'Extracting Metadata for Better Document Indexing and Understanding': 'examples/metadata_extraction/MetadataExtractionSEC', 'Automated Metadata Extraction for Better Retrieval + Synthesis': 'examples/metadata_extraction/MetadataExtraction_LLMSurvey', 'Entity Metadata Extraction': 'examples/metadata_extraction/EntityExtractionClimate', 'Metadata Extraction and Augmentation w/ Marvin': 'examples/metadata_extraction/MarvinMetadataExtractorDemo', 'Pydantic Extractor': 'examples/metadata_extraction/PydanticExtractor', 'Defining and Customizing Nodes': 'module_guides/loading/documents_and_nodes/usage_nodes', 'Transformations': 'module_guides/loading/ingestion_pipeline/transformations', 'Node Parser Usage Pattern': 'module_guides/loading/node_parsers/root', 'Node Parser Modules': 'module_guides/loading/node_parsers/modules', 'Ingestion Pipeline': 'module_guides/loading/ingestion_pipeline/root', 'Advanced Ingestion Pipeline': 'examples/ingestion/advanced_ingestion_pipeline', 'Async Ingestion Pipeline + Metadata Extraction': 'examples/ingestion/async_ingestion_pipeline', 'Ingestion Pipeline + Document Management': 'examples/ingestion/document_management_pipeline', 'Redis Ingestion Pipeline': 'examples/ingestion/redis_ingestion_pipeline', 'Building a Live RAG Pipeline over Google Drive Files': 'examples/ingestion/ingestion_gdrive', 'Parallelizing Ingestion Pipeline': 'examples/ingestion/parallel_execution_ingestion_pipeline', 'Indexing': 'understanding/indexing/indexing', 'Storing': 'understanding/storing/storing', 'Querying': 'understanding/querying/querying', 'Putting It All Together': 'understanding/putting_it_all_together/putting_it_all_together', 'Q&A patterns': 'understanding/putting_it_all_together/q_and_a', 'A Guide to Extracting Terms and Definitions': 'understanding/putting_it_all_together/q_and_a/terms_definitions_tutorial', 'Knowledge Graphs': 'understanding/putting_it_all_together/graphs', 'Structured Data': 'understanding/putting_it_all_together/structured_data', 'Airbyte SQL Index Guide': 'understanding/putting_it_all_together/structured_data/Airbyte_demo', 'Full-Stack Web Application': 'understanding/putting_it_all_together/apps', 'A Guide to Building a Full-Stack Web App with LLamaIndex': 'understanding/putting_it_all_together/apps/fullstack_app_guide', 'A Guide to Building a Full-Stack LlamaIndex Web App with Delphic': 'understanding/putting_it_all_together/apps/fullstack_with_delphic', 'How to Build a Chatbot': 'understanding/putting_it_all_together/chatbots/building_a_chatbot', 'Agents': 'understanding/putting_it_all_together/agents', 'Build your own OpenAI Agent': 'examples/agent/openai_agent', 'OpenAI Agent with Query Engine Tools': 'examples/agent/openai_agent_with_query_engine', 'OpenAI Agent Query Planning': 'examples/agent/openai_agent_query_plan', 'OpenAI Assistant Agent': 'examples/agent/openai_assistant_agent', 'OpenAI Assistant Advanced Retrieval Cookbook': 'examples/agent/openai_assistant_query_cookbook', 'OpenAI agent: specifying a forced function call': 'examples/agent/openai_forced_function_call', 'Single-Turn Multi-Function Calling OpenAI Agents': 'examples/agent/openai_agent_parallel_function_calling', 'Context-Augmented OpenAI Agent': 'examples/agent/openai_agent_context_retrieval', 'Full-Stack Projects': 'community/full_stack_projects', 'RAG CLI': 'use_cases/q_and_a/rag_cli', 'Tracing and Debugging': 'understanding/tracing_and_debugging/tracing_and_debugging', 'Evaluating': 'understanding/evaluating/evaluating', 'Cost Analysis': 'understanding/evaluating/cost_analysis/root', 'Usage Pattern': 'understanding/evaluating/cost_analysis/usage_pattern'}, {'Basic Strategies': 'optimizing/basic_strategies/basic_strategies', 'Accessing/Customizing Prompts within Higher-Level Modules': 'examples/prompts/prompt_mixin', 'Advanced Prompt Techniques (Variable Mappings, Functions)': 'examples/prompts/advanced_prompts', 'Prompt Engineering for RAG': 'examples/prompts/prompts_rag', 'BM25 Retriever': 'examples/retrievers/bm25_retriever', 'Reciprocal Rerank Fusion Retriever': 'examples/retrievers/reciprocal_rerank_fusion', 'Weaviate Vector Store - Hybrid Search': 'examples/vector_stores/WeaviateIndexDemo-Hybrid', 'Pinecone Vector Store - Hybrid Search': 'examples/vector_stores/PineconeIndexDemo-Hybrid', 'Vector Store Index usage examples': 'module_guides/indexing/vector_store_guide', 'Defining and Customizing Documents': 'module_guides/loading/documents_and_nodes/usage_documents', 'Metadata Extraction Usage Pattern': 'module_guides/loading/documents_and_nodes/usage_metadata_extractor', 'Extracting Metadata for Better Document Indexing and Understanding': 'examples/metadata_extraction/MetadataExtractionSEC', 'Automated Metadata Extraction for Better Retrieval + Synthesis': 'examples/metadata_extraction/MetadataExtraction_LLMSurvey', 'Entity Metadata Extraction': 'examples/metadata_extraction/EntityExtractionClimate', 'Metadata Extraction and Augmentation w/ Marvin': 'examples/metadata_extraction/MarvinMetadataExtractorDemo', 'Pydantic Extractor': 'examples/metadata_extraction/PydanticExtractor', 'Defining and Customizing Nodes': 'module_guides/loading/documents_and_nodes/usage_nodes', 'Multi-Tenancy RAG with LlamaIndex': 'examples/multi_tenancy/multi_tenancy_rag', 'Advanced Retrieval Strategies': 'optimizing/advanced_retrieval/advanced_retrieval', 'Query Transform Cookbook': 'examples/query_transformations/query_transform_cookbook', 'Query Transformations': 'optimizing/advanced_retrieval/query_transformations', 'HyDE Query Transform': 'examples/query_transformations/HyDEQueryTransformDemo', 'Multi-Step Query Engine': 'examples/query_transformations/SimpleIndexDemo-multistep', 'Composable Objects': 'examples/retrievers/composable_retrievers', 'DeepMemory (Activeloop)': 'examples/retrievers/deep_memory', 'Agentic strategies': 'optimizing/agentic_strategies/agentic_strategies', 'Routers': 'module_guides/querying/router/root', 'Router Query Engine': 'examples/query_engine/RouterQueryEngine', 'Retriever Router Query Engine': 'examples/query_engine/RetrieverRouterQueryEngine', 'SQL Router Query Engine': 'examples/query_engine/SQLRouterQueryEngine', 'Router Retriever': 'examples/retrievers/router_retriever', 'Sub Question Query Engine (Intro)': 'examples/query_engine/sub_question_query_engine', 'Build your own OpenAI Agent': 'examples/agent/openai_agent', 'OpenAI Agent with Query Engine Tools': 'examples/agent/openai_agent_with_query_engine', 'Retrieval-Augmented OpenAI Agent': 'examples/agent/openai_agent_retrieval', 'OpenAI Agent + Query Engine Experimental Cookbook': 'examples/agent/openai_agent_query_cookbook', 'OpenAI Agent Query Planning': 'examples/agent/openai_agent_query_plan', 'Context-Augmented OpenAI Agent': 'examples/agent/openai_agent_context_retrieval', 'Evaluation': 'optimizing/evaluation/evaluation', 'End-to-End Evaluation': 'optimizing/evaluation/e2e_evaluation', 'QuestionGeneration': 'examples/evaluation/QuestionGeneration', 'BatchEvalRunner - Running Multiple Evaluations': 'examples/evaluation/batch_eval', 'Correctness Evaluator': 'examples/evaluation/correctness_eval', 'Faithfulness Evaluator': 'examples/evaluation/faithfulness_eval', 'Guideline Evaluator': 'examples/evaluation/guideline_eval', 'Pairwise Evaluator': 'examples/evaluation/pairwise_eval', 'Relevancy Evaluator': 'examples/evaluation/relevancy_eval', 'Embedding Similarity Evaluator': 'examples/evaluation/semantic_similarity_eval', 'Component Wise Evaluation': 'optimizing/evaluation/component_wise_evaluation', 'BEIR Out of Domain Benchmark': 'examples/evaluation/BeirEvaluation', 'HotpotQADistractor Demo': 'examples/evaluation/HotpotQADistractor', 'Evaluating': 'module_guides/evaluating/root', 'Usage Pattern (Response Evaluation)': 'module_guides/evaluating/usage_pattern', 'Usage Pattern (Retrieval)': 'module_guides/evaluating/usage_pattern_retrieval', 'Modules': 'module_guides/evaluating/modules', 'Answer Relevancy and Context Relevancy Evaluations': 'examples/evaluation/answer_and_context_relevancy', '🚀 RAG/LLM Evaluators - DeepEval': 'examples/evaluation/Deepeval', 'Evaluating Multi-Modal RAG': 'examples/evaluation/multi_modal/multi_modal_rag_evaluation', 'Retrieval Evaluation': 'examples/evaluation/retrieval/retriever_eval', 'Evaluating With ': 'module_guides/evaluating/evaluating_with_llamadatasets', 'Benchmarking RAG Pipelines With A ': 'examples/llama_dataset/labelled-rag-datasets', 'Downloading a LlamaDataset from LlamaHub': 'examples/llama_dataset/downloading_llama_datasets', 'Contributing A ': 'module_guides/evaluating/contributing_llamadatasets', 'LlamaDataset': 'examples/llama_dataset/ragdataset_submission_template', 'Fine-tuning': 'optimizing/fine-tuning/fine-tuning', 'Fine-tuning an Adapter': 'examples/finetuning/embeddings/finetune_embedding_adapter', 'Embedding Fine-tuning Guide': 'examples/finetuning/embeddings/finetune_embedding', 'Router Fine-tuning': 'examples/finetuning/router/router_finetune', 'GPT-3.5 Fine-tuning Notebook (Notebook link)': 'examples/finetuning/openai_fine_tuning', 'Fine-tuning a gpt-3.5 ReAct Agent on Better Chain of Thought': 'examples/finetuning/react_agent/react_agent_finetune', '[WIP] Function Calling Fine-tuning': 'examples/finetuning/openai_fine_tuning_functions', 'OpenAI Function Calling Fine-tuning': 'examples/finetuning/openai_fine_tuning_functions', 'Llama2 Structured Output Fine-tuning': 'examples/finetuning/gradient/gradient_structured', 'Llama 2 Text-to-SQL Fine-tuning (w/ Gradient.AI)': 'examples/finetuning/gradient/gradient_fine_tuning', 'Knowledge Distillation For Fine-Tuning A GPT-3.5 Judge (Correctness)': 'examples/finetuning/llm_judge/correctness/finetune_llm_judge_single_grading_correctness', 'Knowledge Distillation For Fine-Tuning A GPT-3.5 Judge (Pairwise)': 'examples/finetuning/llm_judge/pairwise/finetune_llm_judge', 'Cross-Encoder Finetuning': 'examples/finetuning/cross_encoder_finetuning/cross_encoder_finetuning', 'Cohere Custom Reranker': 'examples/finetuning/rerankers/cohere_custom_reranker', 'Building Performant RAG Applications for Production': 'optimizing/production_rag', 'Recursive Retriever + Query Engine Demo': 'examples/query_engine/pdf_tables/recursive_retriever', 'Document Summary Index': 'examples/index_structs/doc_summary/DocSummary', 'Metadata Replacement + Node Sentence Window': 'examples/node_postprocessor/MetadataReplacementDemo', 'Auto-Retrieval from a Vector Database': 'examples/vector_stores/chroma_auto_retriever', 'Recursive Retriever + Document Agents': 'examples/query_engine/recursive_retriever_agents', 'Comparing Methods for Structured Retrieval (Auto-Retrieval vs. Recursive Retrieval)': 'examples/retrievers/auto_vs_recursive_retriever', 'Sub Question Query Engine': 'examples/query_engine/sub_question_query_engine', 'Joint QA Summary Query Engine': 'examples/query_engine/JointQASummary', 'Writing Custom Modules': 'optimizing/custom_modules', 'Building RAG from Scratch (Lower-Level)': 'optimizing/building_rag_from_scratch', 'Building Data Ingestion from Scratch': 'examples/low_level/ingestion', 'Building Retrieval from Scratch': 'examples/low_level/retrieval', 'Building RAG from Scratch (Open-source only!)': 'examples/low_level/oss_ingestion_retrieval', 'Building a (Very Simple) Vector Store from Scratch': 'examples/low_level/vector_store', 'Building Response Synthesis from Scratch': 'examples/low_level/response_synthesis', 'Building Evaluation from Scratch': 'examples/low_level/evaluation', 'Building Hybrid Search from Scratch': 'examples/vector_stores/qdrant_hybrid', 'Building a Router from Scratch': 'examples/low_level/router', 'Building an Advanced Fusion Retriever from Scratch': 'examples/low_level/fusion_retriever', 'Query Pipeline for Advanced Text-to-SQL': 'examples/pipeline/query_pipeline_sql', 'Query Pipeline over Pandas DataFrames': 'examples/pipeline/query_pipeline_pandas'}, {'Models': 'module_guides/models/models', 'Using LLMs': 'module_guides/models/llms', 'Using LLMs as standalone modules': 'module_guides/models/llms/usage_standalone', 'Customizing LLMs within LlamaIndex Abstractions': 'module_guides/models/llms/usage_custom', 'Available LLM integrations': 'module_guides/models/llms/modules', 'AI21': 'examples/llm/ai21', 'Anthropic': 'examples/llm/anthropic', 'Anyscale': 'examples/llm/anyscale', 'Bedrock': 'examples/llm/bedrock', 'Clarifai LLM': 'examples/llm/clarifai', 'Cohere': 'examples/llm/cohere', 'EverlyAI': 'examples/llm/everlyai', 'Gradient Base Model': 'examples/llm/gradient_base_model', 'Gradient Model Adapter': 'examples/llm/gradient_model_adapter', 'HuggingFace LLM - Camel-5b': 'examples/customization/llms/SimpleIndexDemo-Huggingface_camel', 'HuggingFace LLM - StableLM': 'examples/customization/llms/SimpleIndexDemo-Huggingface_stablelm', 'Local Llama2 + VectorStoreIndex': 'examples/vector_stores/SimpleIndexDemoLlama-Local', 'Konko': 'examples/llm/konko', 'LangChain LLM': 'examples/llm/langchain', 'LiteLLM': 'examples/llm/litellm', 'Llama API': 'examples/llm/llama_api', 'LlamaCPP': 'examples/llm/llama_2_llama_cpp', 'LocalAI': 'examples/llm/localai', 'MistralAI': 'examples/llm/mistralai', 'Monster API <> LLamaIndex': 'examples/llm/monsterapi', 'Neutrino AI': 'examples/llm/neutrino', 'Nvidia TensorRT-LLM': 'examples/llm/nvidia_tensorrt', 'Nvidia Triton': 'examples/llm/nvidia_triton', 'Ollama - Llama 2 7B': 'examples/llm/ollama', 'OpenAI': 'examples/llm/openai', 'Azure OpenAI': 'examples/customization/llms/AzureOpenAI', 'OpenLLM': 'examples/llm/openllm', 'OpenRouter': 'examples/llm/openrouter', 'PaLM': 'examples/llm/palm', 'Perplexity': 'examples/llm/perplexity', 'Portkey': 'examples/llm/portkey', 'Predibase': 'examples/llm/predibase', 'Replicate - Llama 2 13B': 'examples/llm/llama_2', 'Replicate - Vicuna 13B': 'examples/llm/vicuna', 'Llama2 + VectorStoreIndex': 'examples/vector_stores/SimpleIndexDemoLlama2', 'RunGPT': 'examples/llm/rungpt', 'Interacting with LLM deployed in Amazon SageMaker Endpoint with LlamaIndex': 'examples/llm/sagemaker_endpoint_llm', 'Together AI LLM': 'examples/llm/together', 'Getting Started': 'examples/llm/vertex', 'Install Vllm': 'examples/llm/vllm', 'Xorbits Inference': 'examples/llm/xinference_local_deployment', 'Embeddings': 'module_guides/models/embeddings', 'Embeddings with Clarifai': 'examples/embeddings/clarifai', 'CohereAI Embeddings': 'examples/embeddings/cohereai', 'Custom Embeddings': 'examples/embeddings/custom_embeddings', 'Elasticsearch Embeddings': 'examples/embeddings/elasticsearch', 'Qdrant FastEmbed Embeddings': 'examples/embeddings/fastembed', 'Google PaLM Embeddings': 'examples/embeddings/google_palm', 'Gradient Embeddings': 'examples/embeddings/gradient', 'Anyscale Embeddings': 'examples/embeddings/Anyscale', 'Local Embeddings with HuggingFace': 'examples/embeddings/huggingface', 'Jina Embeddings': 'examples/embeddings/jinaai_embeddings', 'LangChain Embeddings': 'examples/embeddings/Langchain', 'LLMRails Embeddings': 'examples/embeddings/llm_rails', 'MistralAI Embeddings': 'examples/embeddings/mistralai', 'OpenAI Embeddings': 'examples/embeddings/OpenAI', 'Interacting with Embeddings deployed in Amazon SageMaker Endpoint with LlamaIndex': 'examples/embeddings/sagemaker_embedding_endpoint', 'Text Embedding Inference': 'examples/embeddings/text_embedding_inference', 'Together AI Embeddings': 'examples/embeddings/together', 'Voyage Embeddings': 'examples/embeddings/voyageai', 'Prompts': 'module_guides/models/prompts', 'Usage Pattern': 'module_guides/deploying/agents/tools/usage_pattern', 'Completion prompts': 'examples/customization/prompts/completion_prompts', 'Chat prompts': 'examples/customization/prompts/chat_prompts', 'Accessing/Customizing Prompts within Higher-Level Modules': 'examples/prompts/prompt_mixin', 'Advanced Prompt Techniques (Variable Mappings, Functions)': 'examples/prompts/advanced_prompts', 'Prompt Engineering for RAG': 'examples/prompts/prompts_rag', '“Optimization by Prompting” for RAG': 'examples/prompts/prompt_optimization', 'EmotionPrompt in RAG': 'examples/prompts/emotion_prompt', 'Using local models': 'module_guides/models/llms/local', '[Beta] Multi-modal models': 'module_guides/models/multi_modal', 'Multi-Modal LLM using OpenAI GPT-4V model for image reasoning': 'examples/multi_modal/openai_multi_modal', 'Multi-Modal LLM using Google’s Gemini model for image understanding and build Retrieval Augmented Generation with LlamaIndex': 'examples/multi_modal/gemini', 'Multi-Modal LLM using Replicate LlaVa, Fuyu 8B, MiniGPT4 models for image reasoning': 'examples/multi_modal/replicate_multi_modal', 'Multi-Modal GPT4V Pydantic Program': 'examples/multi_modal/multi_modal_pydantic', 'GPT4-V Experiments with General, Specific questions and Chain Of Thought (COT) Prompting Technique.': 'examples/multi_modal/gpt4v_experiments_cot', 'Retrieval-Augmented Image Captioning': 'examples/multi_modal/llava_multi_modal_tesla_10q', 'Advanced Multi-Modal Retrieval using GPT4V and Multi-Modal Index/Retriever': 'examples/multi_modal/gpt4v_multi_modal_retrieval', 'Multi-Modal on PDF’s with tables.': 'examples/multi_modal/multi_modal_pdf_tables', 'Multi-Modal Retrieval using GPT text embedding and CLIP image embedding for Wikipedia Articles': 'examples/multi_modal/multi_modal_retrieval', 'Image to Image Retrieval using CLIP embedding and image correlation reasoning using GPT4V': 'examples/multi_modal/image_to_image_retrieval', 'Chroma Multi-Modal Demo with LlamaIndex': 'examples/multi_modal/ChromaMultiModalDemo', 'Evaluating Multi-Modal RAG': 'examples/evaluation/multi_modal/multi_modal_rag_evaluation', 'Loading Data': 'module_guides/loading/loading', 'Data Connectors (LlamaHub)': 'module_guides/loading/connector/root', 'Module Guides': 'module_guides/deploying/agents/modules', 'Simple Directory Reader': 'examples/data_connectors/simple_directory_reader', 'Psychic Reader': 'examples/data_connectors/PsychicDemo', 'DeepLake Reader': 'examples/data_connectors/DeepLakeReader', 'Qdrant Reader': 'examples/data_connectors/QdrantDemo', 'Discord Reader': 'examples/data_connectors/DiscordDemo', 'MongoDB Reader': 'examples/data_connectors/MongoDemo', 'Chroma Reader': 'examples/data_connectors/ChromaDemo', 'MyScale Reader': 'examples/data_connectors/MyScaleReaderDemo', 'Faiss Reader': 'examples/data_connectors/FaissDemo', 'Obsidian Reader': 'examples/data_connectors/ObsidianReaderDemo', 'Slack Reader': 'examples/data_connectors/SlackDemo', 'Web Page Reader': 'examples/data_connectors/WebPageDemo', 'Pinecone Reader': 'examples/data_connectors/PineconeDemo', 'Pathway Reader': 'examples/data_connectors/PathwayReaderDemo', 'Mbox Reader': 'examples/data_connectors/MboxReaderDemo', 'MilvusReader': 'examples/data_connectors/MilvusReaderDemo', 'Notion Reader': 'examples/data_connectors/NotionDemo', 'Github Repo Reader': 'examples/data_connectors/GithubRepositoryReaderDemo', 'Google Docs Reader': 'examples/data_connectors/GoogleDocsDemo', 'Database Reader': 'examples/data_connectors/DatabaseReaderDemo', 'Twitter Reader': 'examples/data_connectors/TwitterDemo', 'Weaviate Reader': 'examples/data_connectors/WeaviateDemo', 'Make Reader': 'examples/data_connectors/MakeDemo', 'Deplot Reader Demo': 'examples/data_connectors/deplot/DeplotReader', 'Documents / Nodes': 'module_guides/loading/documents_and_nodes/root', 'Defining and Customizing Documents': 'module_guides/loading/documents_and_nodes/usage_documents', 'Metadata Extraction Usage Pattern': 'module_guides/loading/documents_and_nodes/usage_metadata_extractor', 'Extracting Metadata for Better Document Indexing and Understanding': 'examples/metadata_extraction/MetadataExtractionSEC', 'Automated Metadata Extraction for Better Retrieval + Synthesis': 'examples/metadata_extraction/MetadataExtraction_LLMSurvey', 'Entity Metadata Extraction': 'examples/metadata_extraction/EntityExtractionClimate', 'Metadata Extraction and Augmentation w/ Marvin': 'examples/metadata_extraction/MarvinMetadataExtractorDemo', 'Pydantic Extractor': 'examples/metadata_extraction/PydanticExtractor', 'Defining and Customizing Nodes': 'module_guides/loading/documents_and_nodes/usage_nodes', 'Transformations': 'module_guides/loading/ingestion_pipeline/transformations', 'Node Parser Usage Pattern': 'module_guides/loading/node_parsers/root', 'Node Parser Modules': 'module_guides/loading/node_parsers/modules', 'Ingestion Pipeline': 'module_guides/loading/ingestion_pipeline/root', 'Advanced Ingestion Pipeline': 'examples/ingestion/advanced_ingestion_pipeline', 'Async Ingestion Pipeline + Metadata Extraction': 'examples/ingestion/async_ingestion_pipeline', 'Ingestion Pipeline + Document Management': 'examples/ingestion/document_management_pipeline', 'Redis Ingestion Pipeline': 'examples/ingestion/redis_ingestion_pipeline', 'Building a Live RAG Pipeline over Google Drive Files': 'examples/ingestion/ingestion_gdrive', 'Parallelizing Ingestion Pipeline': 'examples/ingestion/parallel_execution_ingestion_pipeline', 'Indexing': 'module_guides/indexing/indexing', 'Using VectorStoreIndex': 'module_guides/indexing/vector_store_index', 'Metadata Extraction': 'module_guides/indexing/metadata_extraction', 'Document Management': 'module_guides/indexing/document_management', 'Vector Store Index usage examples': 'module_guides/indexing/vector_store_guide', 'Composable Objects': 'examples/retrievers/composable_retrievers', 'How Each Index Works': 'module_guides/indexing/index_guide', 'VectorStoreIndex': 'module_guides/indexing/vector_store_index', 'Summary Index': 'module_guides/indexing/index_guide', 'Tree Index': 'module_guides/indexing/index_guide', 'Keyword Table Index': 'module_guides/indexing/index_guide', 'Knowledge Graph Index': 'examples/index_structs/knowledge_graph/KnowledgeGraphDemo', 'Knowledge Graph Query Engine': 'examples/query_engine/knowledge_graph_query_engine', 'Knowledge Graph RAG Query Engine': 'examples/query_engine/knowledge_graph_rag_query_engine', 'REBEL + Wikipedia Filtering': 'examples/index_structs/knowledge_graph/knowledge_graph2', 'SQL Index': 'examples/index_structs/struct_indices/SQLIndexDemo', 'SQL Query Engine with LlamaIndex + DuckDB': 'examples/index_structs/struct_indices/duckdb_sql_query', 'Document Summary Index': 'examples/index_structs/doc_summary/DocSummary', 'The ': 'examples/objects/object_index', 'Storing': 'module_guides/storing/storing', 'Customizing Storage': 'module_guides/storing/customization', 'Persisting & Loading Data': 'module_guides/storing/save_load', 'Vector Stores': 'module_guides/storing/vector_stores', 'Astra DB': 'examples/vector_stores/AstraDBIndexDemo', 'Simple Vector Store - Async Index Creation': 'examples/vector_stores/AsyncIndexCreationDemo', 'Azure CosmosDB MongoDB Vector Store': 'examples/vector_stores/AzureCosmosDBMongoDBvCoreDemo', 'Cassandra Vector Store': 'examples/vector_stores/CassandraIndexDemo', 'Chroma': 'examples/vector_stores/ChromaIndexDemo', 'DashVector Vector Store': 'examples/vector_stores/DashvectorIndexDemo', 'Deep Lake Vector Store Quickstart': 'examples/vector_stores/DeepLakeIndexDemo', 'DocArray Hnsw Vector Store': 'examples/vector_stores/DocArrayHnswIndexDemo', 'DocArray InMemory Vector Store': 'examples/vector_stores/DocArrayInMemoryIndexDemo', 'Epsilla Vector Store': 'examples/vector_stores/EpsillaIndexDemo', 'Jaguar Vector Store': 'examples/vector_stores/JaguarIndexDemo', 'LanceDB Vector Store': 'examples/vector_stores/LanceDBIndexDemo', 'Lantern Vector Store': 'examples/vector_stores/LanternIndexDemo', 'Metal Vector Store': 'examples/vector_stores/MetalIndexDemo', 'Milvus Vector Store': 'examples/vector_stores/MilvusIndexDemo', 'MyScale Vector Store': 'examples/vector_stores/MyScaleIndexDemo', 'Elasticsearch Vector Store': 'examples/vector_stores/ElasticsearchIndexDemo', 'Faiss Vector Store': 'examples/vector_stores/FaissIndexDemo', 'MongoDB Atlas': 'examples/vector_stores/MongoDBAtlasVectorSearch', 'Neo4j vector store': 'examples/vector_stores/Neo4jVectorDemo', 'Opensearch Vector Store': 'examples/vector_stores/OpensearchDemo', 'Pinecone Vector Store': 'examples/vector_stores/PineconeIndexDemo', 'Pinecone Vector Store - Hybrid Search': 'examples/vector_stores/PineconeIndexDemo-Hybrid', 'pgvecto.rs': 'examples/vector_stores/PGVectoRsDemo', 'Postgres Vector Store': 'examples/vector_stores/postgres', 'Redis Vector Store': 'examples/vector_stores/RedisIndexDemo', 'Qdrant Vector Store': 'examples/vector_stores/QdrantIndexDemo', 'Qdrant Hybrid Search': 'examples/vector_stores/qdrant_hybrid', 'Rockset Vector Store': 'examples/vector_stores/RocksetIndexDemo', 'Simple Vector Store': 'examples/vector_stores/SimpleIndexDemo', 'Supabase Vector Store': 'examples/vector_stores/SupabaseVectorIndexDemo', 'Tair Vector Store': 'examples/vector_stores/TairIndexDemo', 'Tencent Cloud VectorDB': 'examples/vector_stores/TencentVectorDBIndexDemo', 'Timescale Vector Store (PostgreSQL)': 'examples/vector_stores/Timescalevector', 'Weaviate Vector Store': 'examples/vector_stores/WeaviateIndexDemo', 'Weaviate Vector Store - Hybrid Search': 'examples/vector_stores/WeaviateIndexDemo-Hybrid', 'Zep Vector Store': 'examples/vector_stores/ZepIndexDemo', 'Document Stores': 'module_guides/storing/docstores', 'Index Stores': 'module_guides/storing/index_stores', 'Key-Value Stores': 'module_guides/storing/kv_stores', 'Using Graph Stores': 'community/integrations/graph_stores', 'Neo4j Graph Store': 'examples/index_structs/knowledge_graph/Neo4jKGIndexDemo', 'Nebula Graph Store': 'examples/index_structs/knowledge_graph/NebulaGraphKGIndexDemo', 'Kuzu Graph Store': 'examples/index_structs/knowledge_graph/KuzuGraphDemo', 'FalkorDB Graph Store': 'examples/index_structs/knowledge_graph/FalkorDBGraphDemo', 'Chat Stores': 'module_guides/storing/chat_stores', 'Querying': 'module_guides/querying/querying', 'Query Pipeline': 'module_guides/querying/pipeline/root', 'Module Usage': 'module_guides/querying/pipeline/module_usage', 'An Introduction to LlamaIndex Query Pipelines': 'examples/pipeline/query_pipeline', 'Query Pipeline with Async/Parallel Execution': 'examples/pipeline/query_pipeline_async', 'Query Pipeline over Pandas DataFrames': 'examples/pipeline/query_pipeline_pandas', 'Query Pipeline for Advanced Text-to-SQL': 'examples/pipeline/query_pipeline_sql', 'Building an Agent around a Query Pipeline': 'examples/agent/agent_runner/query_pipeline_agent', 'Query Engine': 'module_guides/deploying/query_engine/root', 'Response Modes': 'module_guides/deploying/query_engine/response_modes', 'Streaming': 'module_guides/deploying/query_engine/streaming', 'Custom Query Engine': 'examples/query_engine/custom_query_engine', 'Retriever Query Engine': 'examples/query_engine/CustomRetrievers', 'Text-to-SQL Guide (Query Engine + Retriever)': 'examples/index_structs/struct_indices/SQLIndexDemo', 'JSON Query Engine': 'examples/query_engine/json_query_engine', 'Pandas Query Engine': 'examples/query_engine/pandas_query_engine', 'JSONalyze Query Engine': 'examples/query_engine/JSONalyze_query_engine', 'Structured Hierarchical Retrieval': 'examples/query_engine/multi_doc_auto_retrieval/multi_doc_auto_retrieval', 'Router Query Engine': 'examples/query_engine/RouterQueryEngine', 'Retriever Router Query Engine': 'examples/query_engine/RetrieverRouterQueryEngine', 'Joint QA Summary Query Engine': 'examples/query_engine/JointQASummary', 'Sub Question Query Engine': 'examples/query_engine/sub_question_query_engine', 'Multi-Step Query Engine': 'examples/query_transformations/SimpleIndexDemo-multistep', 'SQL Router Query Engine': 'examples/query_engine/SQLRouterQueryEngine', 'SQL Auto Vector Query Engine': 'examples/query_engine/SQLAutoVectorQueryEngine', 'SQL Join Query Engine': 'examples/query_engine/SQLJoinQueryEngine', '[Beta] Text-to-SQL with PGVector': 'examples/query_engine/pgvector_sql_query_engine', 'Retry Query Engine': 'examples/evaluation/RetryQuery', 'CitationQueryEngine': 'examples/query_engine/citation_query_engine', 'Recursive Retriever + Query Engine Demo': 'examples/query_engine/pdf_tables/recursive_retriever', 'Joint Tabular/Semantic QA over Tesla 10K': 'examples/query_engine/sec_tables/tesla_10q_table', 'Recursive Retriever + Document Agents': 'examples/query_engine/recursive_retriever_agents', 'Ensemble Query Engine Guide': 'examples/query_engine/ensemble_query_engine', 'Multi-Document Agents': 'examples/agent/multi_document_agents', 'Multi-Document Agents (V1)': 'examples/agent/multi_document_agents-v1', 'FLARE Query Engine': 'examples/query_engine/flare_query_engine', 'Supporting Modules': 'module_guides/supporting_modules/supporting_modules', 'Query Transformations': 'optimizing/advanced_retrieval/query_transformations', 'HyDE Query Transform': 'examples/query_transformations/HyDEQueryTransformDemo', 'Chat Engine': 'module_guides/deploying/chat_engines/root', 'ReAct Chat Engine': 'examples/chat_engine/chat_engine_react', 'OpenAI Chat Engine': 'examples/chat_engine/chat_engine_openai', 'Condense Question Chat Engine': 'examples/chat_engine/chat_engine_condense_question', 'Context Chat Engine': 'examples/chat_engine/chat_engine_context', 'Context Plus Condense Chat Engine': 'examples/chat_engine/chat_engine_condense_plus_context', 'Simple Chat Engine': 'examples/chat_engine/chat_engine_repl', 'Agents': 'module_guides/deploying/agents/root', 'Build your own OpenAI Agent': 'examples/agent/openai_agent', 'OpenAI Agent with Query Engine Tools': 'examples/agent/openai_agent_with_query_engine', 'Retrieval-Augmented OpenAI Agent': 'examples/agent/openai_agent_retrieval', 'OpenAI Agent + Query Engine Experimental Cookbook': 'examples/agent/openai_agent_query_cookbook', 'OpenAI Agent Query Planning': 'examples/agent/openai_agent_query_plan', 'Context-Augmented OpenAI Agent': 'examples/agent/openai_agent_context_retrieval', 'GPT Builder Demo': 'examples/agent/agent_builder', 'Single-Turn Multi-Function Calling OpenAI Agents': 'examples/agent/openai_agent_parallel_function_calling', 'OpenAI Assistant Agent': 'examples/agent/openai_assistant_agent', 'Benchmarking OpenAI Retrieval API (through Assistant Agent)': 'examples/agent/openai_retrieval_benchmark', 'OpenAI Assistant Advanced Retrieval Cookbook': 'examples/agent/openai_assistant_query_cookbook', 'ReAct Agent - A Simple Intro with Calculator Tools': 'examples/agent/react_agent', 'ReAct Agent with Query Engine (RAG) Tools': 'examples/agent/react_agent_with_query_engine', 'Building a Custom Agent': 'examples/agent/custom_agent', 'Step-wise, Controllable Agents': 'examples/agent/agent_runner/agent_runner', 'Controllable Agents for RAG': 'examples/agent/agent_runner/agent_runner_rag_controllable', 'Tools': 'module_guides/deploying/agents/tools/root', 'LlamaHub Tools Guide': 'module_guides/deploying/agents/tools/llamahub_tools_guide', 'Lower-Level Agent API': 'module_guides/deploying/agents/agent_runner', 'Retriever': 'module_guides/querying/retriever/root', 'Retriever Modes': 'module_guides/querying/retriever/retriever_modes', 'Retriever Modules': 'module_guides/querying/retriever/retrievers', 'Define Custom Retriever': 'examples/query_engine/CustomRetrievers', 'BM25 Hybrid Retriever': 'examples/retrievers/bm25_retriever', 'Simple Fusion Retriever': 'examples/retrievers/simple_fusion', 'Reciprocal Rerank Fusion Retriever': 'examples/retrievers/reciprocal_rerank_fusion', 'Auto Merging Retriever': 'examples/retrievers/auto_merging_retriever', 'Metadata Replacement + Node Sentence Window': 'examples/node_postprocessor/MetadataReplacementDemo', 'A Simple to Advanced Guide with Auto-Retrieval (with Pinecone + Arize Phoenix)': 'examples/vector_stores/pinecone_auto_retriever', 'Auto-Retrieval (with Lantern)': 'examples/vector_stores/LanternAutoRetriever', 'Auto-Retrieval (with Chroma)': 'examples/vector_stores/chroma_auto_retriever', 'Auto-Retrieval (with BagelDB)': 'examples/vector_stores/BagelAutoRetriever', 'Auto-Retrieval from a Vectara Index': 'examples/retrievers/vectara_auto_retriever', 'Knowledge Graph RAG Retriever': 'examples/query_engine/knowledge_graph_rag_query_engine', 'Recursive Retriever + Node References': 'examples/retrievers/recursive_retriever_nodes', 'Recursive Retriever + Node References + Braintrust': 'examples/retrievers/recurisve_retriever_nodes_braintrust', 'Router Retriever': 'examples/retrievers/router_retriever', 'Ensemble Retrieval Guide': 'examples/retrievers/ensemble_retrieval', 'Google Generative Language Semantic Retriever': 'examples/managed/GoogleDemo', 'Vectara Managed Index': 'examples/managed/vectaraDemo', 'Managed Index with Zilliz Cloud Pipelines': 'examples/managed/zcpDemo', 'Chunk + Document Hybrid Retrieval with Long-Context Embeddings (Together.ai)': 'examples/retrievers/multi_doc_together_hybrid', 'You.com Retriever': 'examples/retrievers/you_retriever', 'DeepMemory (Activeloop)': 'examples/retrievers/deep_memory', 'Pathway Retriever': 'examples/retrievers/pathway_retriever', 'Response Synthesizer': 'module_guides/querying/response_synthesizers/root', 'Response Synthesis Modules': 'module_guides/querying/response_synthesizers/response_synthesizers', 'Refine': 'examples/response_synthesizers/refine', 'Refine with Structured Answer Filtering': 'examples/response_synthesizers/structured_refine', 'Tree Summarize': 'examples/response_synthesizers/tree_summarize', 'Pydantic Tree Summarize': 'examples/response_synthesizers/pydantic_tree_summarize', 'Routers': 'module_guides/querying/router/root', 'Node Postprocessor': 'module_guides/querying/node_postprocessors/root', 'Node Postprocessor Modules': 'module_guides/querying/node_postprocessors/node_postprocessors', 'Sentence Embedding Optimizer': 'examples/node_postprocessor/OptimizerDemo', 'Cohere Rerank': 'examples/node_postprocessor/CohereRerank', 'LLM Reranker Demonstration (2021 Lyft 10-k)': 'examples/node_postprocessor/LLMReranker-Lyft-10k', 'LLM Reranker Demonstration (Great Gatsby)': 'examples/node_postprocessor/LLMReranker-Gatsby', 'Recency Filtering': 'examples/node_postprocessor/RecencyPostprocessorDemo', 'Time-Weighted Rerank': 'examples/node_postprocessor/TimeWeightedPostprocessorDemo', 'PII Masking': 'examples/node_postprocessor/PII', 'Forward/Backward Augmentation': 'examples/node_postprocessor/PrevNextPostprocessorDemo', 'LongContextReorder': 'examples/node_postprocessor/LongContextReorder', 'RankGPT Reranker Demonstration (Van Gogh Wiki)': 'examples/node_postprocessor/rankGPT', 'Structured Outputs': 'module_guides/querying/structured_outputs/structured_outputs', 'Pydantic Program': 'module_guides/querying/structured_outputs/pydantic_program', 'LLM Pydantic Program': 'examples/output_parsing/llm_program', 'OpenAI Pydantic Program': 'examples/output_parsing/openai_pydantic_program', 'Guidance Pydantic Program': 'examples/output_parsing/guidance_pydantic_program', 'Guidance for Sub-Question Query Engine': 'examples/output_parsing/guidance_sub_question', 'DataFrame Structured Data Extraction': 'examples/output_parsing/df_program', 'Evaporate Demo': 'examples/output_parsing/evaporate_program', 'Query Engines + Pydantic Outputs': 'module_guides/querying/structured_outputs/query_engine', 'Query Engine with Pydantic Outputs': 'examples/query_engine/pydantic_query_engine', 'Output Parsing Modules': 'module_guides/querying/structured_outputs/output_parser', 'Guardrails Output Parsing': 'examples/output_parsing/GuardrailsDemo', 'Langchain Output Parsing': 'examples/output_parsing/LangchainOutputParserDemo', 'Observability': 'module_guides/observability/observability', 'Wandb Callback Handler': 'examples/callbacks/WandbCallbackHandler', 'Observability with OpenLLMetry': 'examples/callbacks/OpenLLMetry', 'OpenInference Callback Handler + Arize Phoenix': 'examples/callbacks/OpenInferenceCallback', 'Evaluating and Tracking with TruLens': 'community/integrations/trulens', 'HoneyHive LlamaIndex Tracer': 'examples/callbacks/HoneyHiveLlamaIndexTracer', 'PromptLayer Handler': 'examples/callbacks/PromptLayerHandler', 'Callbacks': 'module_guides/observability/callbacks/root', 'Token Counting Handler': 'examples/callbacks/TokenCountingHandler', 'Llama Debug Handler': 'examples/callbacks/LlamaDebugHandler', 'Aim Callback': 'examples/callbacks/AimCallback', 'Token Counting - Migration Guide': 'module_guides/observability/callbacks/token_counting_migration', 'Evaluating': 'module_guides/evaluating/root', 'Usage Pattern (Response Evaluation)': 'module_guides/evaluating/usage_pattern', 'Usage Pattern (Retrieval)': 'module_guides/evaluating/usage_pattern_retrieval', 'Modules': 'module_guides/evaluating/modules', 'Faithfulness Evaluator': 'examples/evaluation/faithfulness_eval', 'Relevancy Evaluator': 'examples/evaluation/relevancy_eval', 'Answer Relevancy and Context Relevancy Evaluations': 'examples/evaluation/answer_and_context_relevancy', '🚀 RAG/LLM Evaluators - DeepEval': 'examples/evaluation/Deepeval', 'Guideline Evaluator': 'examples/evaluation/guideline_eval', 'Correctness Evaluator': 'examples/evaluation/correctness_eval', 'Embedding Similarity Evaluator': 'examples/evaluation/semantic_similarity_eval', 'QuestionGeneration': 'examples/evaluation/QuestionGeneration', 'BatchEvalRunner - Running Multiple Evaluations': 'examples/evaluation/batch_eval', 'Retrieval Evaluation': 'examples/evaluation/retrieval/retriever_eval', 'Evaluating With ': 'module_guides/evaluating/evaluating_with_llamadatasets', 'Benchmarking RAG Pipelines With A ': 'examples/llama_dataset/labelled-rag-datasets', 'Downloading a LlamaDataset from LlamaHub': 'examples/llama_dataset/downloading_llama_datasets', 'Contributing A ': 'module_guides/evaluating/contributing_llamadatasets', 'LlamaDataset': 'examples/llama_dataset/ragdataset_submission_template', 'Configuring Settings': 'module_guides/supporting_modules/settings'}, {'API Reference': 'api_reference/index', 'Agents': 'api_reference/agents', 'Callbacks': 'api_reference/callbacks', 'Composability': 'api_reference/composability', 'Evaluation': 'api_reference/evaluation', 'Example Notebooks': 'api_reference/example_notebooks', 'Indices': 'api_reference/indices', 'Summary Index': 'api_reference/indices/list', 'Table Index': 'api_reference/indices/table', 'Tree Index': 'api_reference/indices/tree', 'Vector Store Index': 'api_reference/indices/vector_store', 'Structured Store Index': 'api_reference/indices/struct_store', 'Knowledge Graph Index': 'api_reference/indices/kg', 'Empty Index': 'api_reference/indices/empty', 'LLMs': 'api_reference/llms', 'BaseEmbedding': 'api_reference/embeddings', 'Memory': 'api_reference/memory', 'Node Postprocessors': 'api_reference/node_postprocessor', 'Node': 'api/llama_index.core.schema.Node', 'BaseComponent': 'api/llama_index.core.schema.BaseComponent', 'BaseNode': 'api/llama_index.core.schema.BaseNode', 'Document': 'api/llama_index.core.schema.Document', 'ImageDocument': 'api/llama_index.core.schema.ImageDocument', 'ImageNode': 'api/llama_index.core.schema.ImageNode', 'IndexNode': 'api/llama_index.core.schema.IndexNode', 'MetadataMode': 'api/llama_index.core.schema.MetadataMode', 'NodeRelationship': 'api/llama_index.core.schema.NodeRelationship', 'NodeWithScore': 'api/llama_index.core.schema.NodeWithScore', 'ObjectType': 'api/llama_index.core.schema.ObjectType', 'QueryBundle': 'api/llama_index.core.schema.QueryBundle', 'RelatedNodeInfo': 'api/llama_index.core.schema.RelatedNodeInfo', 'TextNode': 'api/llama_index.core.schema.TextNode', 'TransformComponent': 'api/llama_index.core.schema.TransformComponent', 'Playground': 'api_reference/playground', 'Prompt Templates': 'api_reference/prompts', 'Querying an Index': 'api_reference/query', 'Retrievers': 'api_reference/query/retrievers', 'Empty Index Retriever': 'api_reference/query/retrievers/empty', 'Knowledge Graph Retriever': 'api_reference/query/retrievers/kg', 'List Retriever': 'api_reference/query/retrievers/list', 'Keyword Table Retrievers': 'api_reference/query/retrievers/table', 'Tree Retrievers': 'api_reference/query/retrievers/tree', 'Vector Store Retrievers': 'api_reference/query/retrievers/vector_store', 'Transform Retriever': 'api_reference/query/retrievers/transform', 'Response Synthesizer': 'api_reference/query/response_synthesizer', 'Query Engines': 'api_reference/query/query_engines', 'Graph Query Engine': 'api_reference/query/query_engines/graph_query_engine', 'Multistep Query Engine': 'api_reference/query/query_engines/multistep_query_engine', 'Retriever Query Engine': 'api_reference/query/query_engines/retriever_query_engine', 'Transform Query Engine': 'api_reference/query/query_engines/transform_query_engine', 'Router Query Engine': 'api_reference/query/query_engines/router_query_engine', 'Retriever Router Query Engine': 'api_reference/query/query_engines/retriever_router_query_engine', 'Sub Question Query Engine': 'api_reference/query/query_engines/sub_question_query_engine', 'SQL Join Query Engine': 'api_reference/query/query_engines/sql_join_query_engine', 'Flare Query Engine': 'api_reference/query/query_engines/flare_query_engine', 'Citation Query Engine': 'api_reference/query/query_engines/citation_query_engine', 'Knowledge Graph Query Engine': 'api_reference/query/query_engines/knowledge_graph_query_engine', 'SQL Query Engine': 'api_reference/query/query_engines/sql_query_engine', 'Pandas Query Engine': 'api_reference/query/query_engines/pandas_query_engine', 'Chat Engines': 'api_reference/query/chat_engines', 'Simple Chat Engine': 'api_reference/query/chat_engines/simple_chat_engine', 'Condense Question Chat Engine': 'api_reference/query/chat_engines/condense_question_chat_engine', 'Condense Plus Context Chat Engine': 'api_reference/query/chat_engines/condense_plus_context_chat_engine', 'Query Bundle': 'api_reference/query/query_bundle', 'Query Transform': 'api_reference/query/query_transform', 'Data Connectors': 'api_reference/readers', 'BasePydanticReader': 'api/llama_index.core.readers.base.BasePydanticReader', 'BaseReader': 'api/llama_index.core.readers.base.BaseReader', 'ReaderConfig': 'api/llama_index.core.readers.base.ReaderConfig', 'Response': 'api_reference/response', 'Service Context': 'api_reference/service_context', 'Embeddings': 'api_reference/service_context/embeddings', 'Node Parser': 'api_reference/service_context/node_parser', 'get_leaf_nodes': 'api/llama_index.core.node_parser.get_leaf_nodes', 'get_root_nodes': 'api/llama_index.core.node_parser.get_root_nodes', 'TokenTextSplitter': 'api/llama_index.core.node_parser.TokenTextSplitter', 'SentenceSplitter': 'api/llama_index.core.node_parser.SentenceSplitter', 'CodeSplitter': 'api/llama_index.core.node_parser.CodeSplitter', 'SimpleFileNodeParser': 'api/llama_index.core.node_parser.SimpleFileNodeParser', 'HTMLNodeParser': 'api/llama_index.core.node_parser.HTMLNodeParser', 'MarkdownNodeParser': 'api/llama_index.core.node_parser.MarkdownNodeParser', 'JSONNodeParser': 'api/llama_index.core.node_parser.JSONNodeParser', 'SentenceWindowNodeParser': 'api/llama_index.core.node_parser.SentenceWindowNodeParser', 'SemanticSplitterNodeParser': 'api/llama_index.core.node_parser.SemanticSplitterNodeParser', 'NodeParser': 'api/llama_index.core.node_parser.NodeParser', 'HierarchicalNodeParser': 'api/llama_index.core.node_parser.HierarchicalNodeParser', 'TextSplitter': 'api/llama_index.core.node_parser.TextSplitter', 'MarkdownElementNodeParser': 'api/llama_index.core.node_parser.MarkdownElementNodeParser', 'MetadataAwareTextSplitter': 'api/llama_index.core.node_parser.MetadataAwareTextSplitter', 'LangchainNodeParser': 'api/llama_index.core.node_parser.LangchainNodeParser', 'UnstructuredElementNodeParser': 'api/llama_index.core.node_parser.UnstructuredElementNodeParser', 'SimpleNodeParser': 'api/llama_index.core.node_parser.SimpleNodeParser', 'PromptHelper': 'api_reference/service_context/prompt_helper', 'Storage Context': 'api_reference/storage', 'Document Store': 'api_reference/storage/docstore', 'Index Store': 'api_reference/storage/index_store', 'Vector Store': 'api_reference/storage/vector_store', 'VectorStoreQuery': 'api/llama_index.core.vector_stores.VectorStoreQuery', 'VectorStoreQueryResult': 'api/llama_index.core.vector_stores.VectorStoreQueryResult', 'MetadataFilters': 'api/llama_index.core.vector_stores.MetadataFilters', 'MetadataFilter': 'api/llama_index.core.vector_stores.MetadataFilter', 'ExactMatchFilter': 'api/llama_index.core.vector_stores.ExactMatchFilter', 'FilterCondition': 'api/llama_index.core.vector_stores.FilterCondition', 'FilterOperator': 'api/llama_index.core.vector_stores.FilterOperator', 'SimpleVectorStore': 'api/llama_index.core.vector_stores.SimpleVectorStore', 'KV Storage': 'api_reference/storage/kv_store', 'Loading Indices': 'api_reference/storage/indices_save_load', 'Structured Index Configuration': 'api_reference/struct_store'}, {'Integrations': 'community/integrations', 'Llama Packs 🦙📦': 'community/llama_packs/root', 'Llama Packs Example': 'examples/llama_hub/llama_packs_example', 'Llama Pack - Resume Screener 📄': 'examples/llama_hub/llama_pack_resume', 'Ollama Llama Pack Example': 'examples/llama_hub/llama_pack_ollama', 'Observability': 'module_guides/observability/observability', 'Wandb Callback Handler': 'examples/callbacks/WandbCallbackHandler', 'Observability with OpenLLMetry': 'examples/callbacks/OpenLLMetry', 'OpenInference Callback Handler + Arize Phoenix': 'examples/callbacks/OpenInferenceCallback', 'Evaluating and Tracking with TruLens': 'community/integrations/trulens', 'HoneyHive LlamaIndex Tracer': 'examples/callbacks/HoneyHiveLlamaIndexTracer', 'PromptLayer Handler': 'examples/callbacks/PromptLayerHandler', 'Callbacks': 'module_guides/observability/callbacks/root', 'Token Counting Handler': 'examples/callbacks/TokenCountingHandler', 'Llama Debug Handler': 'examples/callbacks/LlamaDebugHandler', 'Aim Callback': 'examples/callbacks/AimCallback', 'Token Counting - Migration Guide': 'module_guides/observability/callbacks/token_counting_migration', 'How to use UpTrain with LlamaIndex': 'community/integrations/uptrain', 'Unit Testing LLMs/RAG With DeepEval': 'community/integrations/deepeval', 'Tracing with Graphsignal': 'community/integrations/graphsignal', 'Guidance': 'community/integrations/guidance', 'LM Format Enforcer': 'community/integrations/lmformatenforcer', 'Guardrails': 'examples/output_parsing/GuardrailsDemo', 'OpenAI Function Calling': 'examples/output_parsing/openai_pydantic_program', 'Using Vector Stores': 'community/integrations/vector_stores', 'Astra DB': 'examples/vector_stores/AstraDBIndexDemo', 'Simple Vector Store - Async Index Creation': 'examples/vector_stores/AsyncIndexCreationDemo', 'Azure CosmosDB MongoDB Vector Store': 'examples/vector_stores/AzureCosmosDBMongoDBvCoreDemo', 'Cassandra Vector Store': 'examples/vector_stores/CassandraIndexDemo', 'Chroma': 'examples/vector_stores/ChromaIndexDemo', 'DashVector Vector Store': 'examples/vector_stores/DashvectorIndexDemo', 'Deep Lake Vector Store Quickstart': 'examples/vector_stores/DeepLakeIndexDemo', 'DocArray Hnsw Vector Store': 'examples/vector_stores/DocArrayHnswIndexDemo', 'DocArray InMemory Vector Store': 'examples/vector_stores/DocArrayInMemoryIndexDemo', 'Epsilla Vector Store': 'examples/vector_stores/EpsillaIndexDemo', 'LanceDB Vector Store': 'examples/vector_stores/LanceDBIndexDemo', 'Lantern Vector Store': 'examples/vector_stores/LanternIndexDemo', 'Metal Vector Store': 'examples/vector_stores/MetalIndexDemo', 'Milvus Vector Store': 'examples/vector_stores/MilvusIndexDemo', 'MyScale Vector Store': 'examples/vector_stores/MyScaleIndexDemo', 'Elasticsearch Vector Store': 'examples/vector_stores/ElasticsearchIndexDemo', 'Faiss Vector Store': 'examples/vector_stores/FaissIndexDemo', 'MongoDB Atlas': 'examples/vector_stores/MongoDBAtlasVectorSearch', 'Neo4j vector store': 'examples/vector_stores/Neo4jVectorDemo', 'Opensearch Vector Store': 'examples/vector_stores/OpensearchDemo', 'Pinecone Vector Store': 'examples/vector_stores/PineconeIndexDemo', 'Pinecone Vector Store - Hybrid Search': 'examples/vector_stores/PineconeIndexDemo-Hybrid', 'pgvecto.rs': 'examples/vector_stores/PGVectoRsDemo', 'Postgres Vector Store': 'examples/vector_stores/postgres', 'Redis Vector Store': 'examples/vector_stores/RedisIndexDemo', 'Qdrant Vector Store': 'examples/vector_stores/QdrantIndexDemo', 'Qdrant Hybrid Search': 'examples/vector_stores/qdrant_hybrid', 'Rockset Vector Store': 'examples/vector_stores/RocksetIndexDemo', 'Simple Vector Store': 'examples/vector_stores/SimpleIndexDemo', 'Supabase Vector Store': 'examples/vector_stores/SupabaseVectorIndexDemo', 'Tair Vector Store': 'examples/vector_stores/TairIndexDemo', 'Tencent Cloud VectorDB': 'examples/vector_stores/TencentVectorDBIndexDemo', 'Timescale Vector Store (PostgreSQL)': 'examples/vector_stores/Timescalevector', 'Upstash Vector Store': 'examples/vector_stores/UpstashVectorDemo', 'Weaviate Vector Store': 'examples/vector_stores/WeaviateIndexDemo', 'Weaviate Vector Store - Hybrid Search': 'examples/vector_stores/WeaviateIndexDemo-Hybrid', 'Zep Vector Store': 'examples/vector_stores/ZepIndexDemo', 'Using Graph Stores': 'community/integrations/graph_stores', 'Neo4j Graph Store': 'examples/index_structs/knowledge_graph/Neo4jKGIndexDemo', 'Nebula Graph Store': 'examples/index_structs/knowledge_graph/NebulaGraphKGIndexDemo', 'Knowledge Graph Query Engine': 'examples/query_engine/knowledge_graph_query_engine', 'Kuzu Graph Store': 'examples/index_structs/knowledge_graph/KuzuGraphDemo', 'FalkorDB Graph Store': 'examples/index_structs/knowledge_graph/FalkorDBGraphDemo', 'Using Managed Indices': 'community/integrations/managed_indices', 'Google Generative Language Semantic Retriever': 'examples/managed/GoogleDemo', 'Vectara Managed Index': 'examples/managed/vectaraDemo', 'Auto-Retrieval from a Vectara Index': 'examples/retrievers/vectara_auto_retriever', 'Managed Index with Zilliz Cloud Pipelines': 'examples/managed/zcpDemo', 'Using with Langchain 🦜🔗': 'community/integrations/using_with_langchain', 'ChatGPT Plugin Integrations': 'community/integrations/chatgpt_plugins', 'Fleet Context Embeddings - Building a Hybrid Search Engine for the Llamaindex Library': 'community/integrations/fleet_libraries_context', 'Frequently Asked Questions (FAQ)': 'community/frequently_asked_questions', 'Large Language Models': 'community/faq/llms', 'Embeddings': 'community/faq/embeddings', 'Vector Database': 'community/faq/vector_database', 'Query Engines': 'community/faq/query_engines', 'Chat Engines': 'community/faq/chat_engines', 'Documents and Nodes': 'community/faq/documents_and_nodes', 'Full-Stack Projects': 'community/full_stack_projects', 'RAG CLI': 'use_cases/q_and_a/rag_cli'}, {'Contributing to LlamaIndex': 'contributing/contributing', 'Documentation Guide': 'contributing/documentation'}, {'ChangeLog': 'changes/changelog', 'Deprecated Terms': 'changes/deprecated_terms'}]
